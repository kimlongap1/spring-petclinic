pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven 'maven-in-jenkin'
      
    }
    environment {
 
        REPO_NAME = 'ocb'
        ARTIFACT_PRICE_ID = 'price-service'
        ARTIFACT_PRODUCT_ID = 'product-service'
        GROUP_ID = 'com.example.k8sdemo'
       
    }

    stages {
        stage('Build') {
            steps {
                echo 'check out code '
                dir('spring-pet-clinic-workspace/') {
                            git branch: 'main',
                                credentialsId: '42e0f3d0-bebd-40f6-93ca-0283c07c1481',
                                url: 'https://github.com/kimlongap1/spring-petclinic.git'
                            script {
                                echo 'build pet clinic service  '
                                
                                sh 'mvn clean install -DskipTests=true'
                         
 
                                 
                            }
                }
            }
        }

   
        stage('Build docker file') {
                    steps {
                        echo 'build docker file  '
                        
                        sh 'eval $(minikube docker-env) . && cd spring-pet-clinic-workspace && docker-compose build '
                          
                        }
                    post {
                        success {
                            echo 'build docker file successful '
                    
                        }
                    }
        }  
               
    stage('Start service on k8s ') {
            steps {
                echo 'Start service on k8s'
                echo '****before change enviroment ***'
                sh 'docker image ls | grep kimlongap'
                sh 'eval $(minikube docker-env) .'
                echo '*****after config enviroment ****'
                sh 'docker image ls | grep kimlongap'
                sh 'eval $(minikube docker-env) . && cd spring-pet-clinic-workspace && kubectl delete -f k8s-config/java-apps-deployment.yaml'
                sh 'eval $(minikube docker-env) . && cd spring-pet-clinic-workspace && kubectl apply -f k8s-config/java-apps-deployment.yaml'
            }
        }
        stage('expose service Minikube') {
            steps {
                echo 'public service on k8s'
              
                sh 'minikube service web-service --url'
                
            }
        }

    }
}
